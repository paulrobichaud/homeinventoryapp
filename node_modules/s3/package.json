{
  "name": "s3",
  "version": "0.3.1",
  "description": "high level amazon s3 client using knox as a backend",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/superjoe30/node-s3-client"
  },
  "keywords": [
    "amazon",
    "s3",
    "high",
    "level",
    "api"
  ],
  "author": {
    "name": "Andrew Kelley"
  },
  "license": "BSD",
  "devDependencies": {
    "mocha": "~1.9.0",
    "mkdirp": "~0.3.5"
  },
  "dependencies": {
    "knox": "~0.8.3"
  },
  "readme": "Install:\n--------\n`npm install --save s3`\n\nUsage:\n------\n```js\n// configure\nvar s3 = require('s3');\n\n// createClient allows any options that knox does.\nvar client = s3.createClient({\n  key: \"your s3 key\",\n  secret: \"your s3 secret\",\n  bucket: \"your s3 bucket\"\n});\n\n// optional headers\nvar headers = {\n  'Content-Type' : 'image/jpg',\n  'x-amz-acl'    : 'public-read'\n};\n\n// upload a file to s3\nvar uploader = client.upload(\"some/local/file\", \"some/remote/file\", headers);\nuploader.on('error', function(err) {\n  console.error(\"unable to upload:\", err.stack);\n});\nuploader.on('progress', function(amountDone, amountTotal) {\n  console.log(\"progress\", amountDone, amountTotal);\n});\nuploader.on('end', function(url) {\n  console.log(\"file available at\", url);\n});\n\n// download a file from s3\nvar downloader = client.download(\"some/remote/file\", \"some/local/file\");\ndownloader.on('error', function(err) {\n  console.error(\"unable to download:\", err.stack);\n});\ndownloader.on('progress', function(amountDone, amountTotal) {\n  console.log(\"progress\", amountDone, amountTotal);\n});\ndownloader.on('end', function() {\n  console.log(\"done\");\n});\n\n// instantiate from existing knox client\nvar knoxClient = knox.createClient(options);\nvar client = s3.fromKnox(knoxClient);\n\n```\n\nThis module uses [knox](https://github.com/LearnBoost/knox) as a backend. If\nyou want to do more low-level things, use knox for those things. It's ok to use\nboth.\n\nTesting:\n--------\n`S3_KEY=<valid_s3_key> S3_SECRET=<valid_s3_secret> S3_BUCKET=<valid_s3_bucket> npm test`\n\nHistory:\n--------\n\n### 0.3.1\n\n * fix `resp.req.url` sometimes not defined causing crash\n * fix emitting `end` event before write completely finished\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/superjoe30/node-s3-client/issues"
  },
  "homepage": "https://github.com/superjoe30/node-s3-client",
  "_id": "s3@0.3.1",
  "dist": {
    "shasum": "639c1ec52deb1f71868e313ce1dd96826dbac396"
  },
  "_from": "s3@",
  "_resolved": "https://registry.npmjs.org/s3/-/s3-0.3.1.tgz"
}
